package com.example.dodo.geologistica;import android.Manifest;import android.content.Context;import android.content.pm.PackageManager;import android.location.Location;import android.location.LocationManager;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v4.app.ActivityCompat;import android.support.v4.app.FragmentActivity;import android.os.Bundle;import android.support.v4.content.ContextCompat;import android.util.Log;import android.widget.Toast;import com.google.android.gms.common.ConnectionResult;import com.google.android.gms.common.api.GoogleApiClient;import com.google.android.gms.location.LocationListener;import com.google.android.gms.location.LocationServices;import com.google.android.gms.maps.CameraUpdateFactory;import com.google.android.gms.maps.GoogleMap;import com.google.android.gms.maps.OnMapReadyCallback;import com.google.android.gms.maps.SupportMapFragment;import com.google.android.gms.maps.model.CameraPosition;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.MarkerOptions;public class IndexMapsActivity extends FragmentActivity implements OnMapReadyCallback, android.location.LocationListener {    //CONTS    public static final String TAG = IndexMapsActivity.class.getSimpleName();    //Variables    private GoogleMap mMap;    private GoogleApiClient mGoogleApiClient;    private Location location;    private LocationManager locationManager;    //Overrides    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_index_maps);        // Obtain the SupportMapFragment and get notified when the map is ready to be used.        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()                .findFragmentById(R.id.map);        mapFragment.getMapAsync(this);    }    @Override    public void onMapReady(GoogleMap googleMap) {        mMap = googleMap;        // Add a marker in Sydney and move the camera        for (Os o: CONSTS.listOs) {            mMap.addMarker(new MarkerOptions().position(o.getLatLng()).title(String.valueOf(o.getIdOs())));        }        //LatLng portoAlegre = new LatLng(-30.0347, -51.2177);        //LatLng gravatai = new LatLng(-29.9423, -50.9908);        //mMap.addMarker(new MarkerOptions().position(portoAlegre).title("I am here!"));        //mMap.addMarker(new MarkerOptions().position(gravatai).title("I am here!"));        mMap.moveCamera(CameraUpdateFactory.newLatLng(CONSTS.listOs.get(0).getLatLng()));        CameraPosition cameraPosition = new CameraPosition.Builder()                .target(CONSTS.listOs.get(0).getLatLng())                .zoom(13).build();        //Zoom in and animate the camera.        mMap.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPosition));    }    @Override    public void onLocationChanged(Location location) {        String str = "Latitude: "+location.getLatitude()+" Longitude: "+location.getLongitude();        Toast.makeText(getBaseContext(), str, Toast.LENGTH_LONG).show();    }    @Override    public void onStatusChanged(String s, int i, Bundle bundle) {    }    @Override    public void onProviderEnabled(String s) {        Toast.makeText(getBaseContext(), "Gps turned on ", Toast.LENGTH_LONG).show();    }    @Override    public void onProviderDisabled(String s) {        Toast.makeText(getBaseContext(), "Gps turned off ", Toast.LENGTH_LONG).show();    }    //Methods}